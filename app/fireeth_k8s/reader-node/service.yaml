# Keeping Ethereum's P2P UDP and TCP in separate services, as it can cause issues with
# k8s.

apiVersion: v1
kind: Service
metadata:
  name: eth66-udp
  annotations:
    metallb.universe.tf/address-pool: expensive
    metallb.universe.tf/allow-shared-ip: "expensive"
spec:
  type: LoadBalancer
  selector:
    app: reader-node
  ports:
    - name: eth66-udp
      port: 30310
      protocol: UDP
      targetPort: 30310
---
apiVersion: v1
kind: Service
metadata:
  name: eth66-tcp
  annotations:
    metallb.universe.tf/address-pool: expensive
    metallb.universe.tf/allow-shared-ip: "expensive"
spec:
  type: LoadBalancer
  selector:
    app: reader-node
  ports:
    - name: eth66-tcp
      port: 30310
      protocol: TCP
      targetPort: 30310
---
apiVersion: v1
kind: Service
metadata:
  name: eth-consensus
spec:
  type: ClusterIP
  selector:
    app: reader-node
  ports:
    - name: eth-consensus
      port: 8547
      protocol: TCP
      targetPort: 8547
---
apiVersion: v1
kind: Service
metadata:
  name: reader-metrics
  labels:
    app: reader-node
    serviceMonitorTarget: "true"
spec:
  type: ClusterIP
  selector:
    app: reader-node
  ports:
    - name: prometheus-fh
      port: 9102
      protocol: TCP
      targetPort: prometheus-fh
    - name: prometheus-geth
      port: 6061
      protocol: TCP
      targetPort: prometheus-geth
---
apiVersion: v1
kind: Service
metadata:
  name: reader-node
  labels:
    app: reader-node
    serviceMonitorTarget: "true"
spec:
  type: ClusterIP
  selector:
    app: reader-node
  ports:
    - name: fh-grpc
      port: 13010
      protocol: TCP
      targetPort: fh-grpc
    - name: fh-node-mgr
      port: 13009
      protocol: TCP
      targetPort: fh-node-mgr
